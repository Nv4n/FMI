<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <xsd:element name="warehouses">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="warehouse" minOccurs="1" maxOccurs="unbounded">

                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>


    <xsd:complexType name="warehouse">
        <xsd:sequence>
            <xsd:element name="items">
                <!-- <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="item" type="item">

                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType> -->
            </xsd:element>
            <xsd:element name="contact">

            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

</xsd:schema>

<!--Всеки
студент избира и разработва собствен модел на документ за избраната
от него и одобрена от асистиращите приложна област. За този модел се
съставя Document Type Definition - DTD или SCHEMA. DTD или SCHEMA
трябва да съдържа минимум 20 различни елемента и 5 атрибута, с които се
задава състава и структурата на модела. В документа трябва да има поне две
различни групи вложени елементи (всяка с най-малко 3 елемента). Групите
трябва да се срещат 2-3 пъти
-->

<!--Here's
a basic schema for an inventory/warehouse system within your agro nursery app. It includes tables
for managing stock levels, warehouse locations, and product batches.

Inventory/Warehouse Schema
1. warehouses
Stores details about each warehouse location.

Column	Type	Description
id	SERIAL	Primary key, unique warehouse ID.
name	VARCHAR(100)	Name of the warehouse.
location	VARCHAR(255)	Address or description of the location.
created_at	TIMESTAMP	Timestamp when the warehouse was created.
updated_at	TIMESTAMP	Timestamp for the last update.
2. inventory_items
Details of items in stock within each warehouse.

Column	Type	Description
id	SERIAL	Primary key, unique inventory item ID.
warehouse_id	INT	Foreign key to warehouses(id).
product_id	INT	Foreign key to products(id).
quantity	INT	Quantity of the product in stock.
batch_id	INT	Foreign key to batches(id).
expiry_date	DATE	Expiration date of the product, if applicable.
created_at	TIMESTAMP	Timestamp when the item was added.
updated_at	TIMESTAMP	Timestamp for the last update.
3. products
Information about products in the inventory.

Column	Type	Description
id	SERIAL	Primary key, unique product ID.
name	VARCHAR(100)	Product name.
description	TEXT	Description of the product.
price	DECIMAL(10, 2)	Price per unit.
created_at	TIMESTAMP	Timestamp when the product was created.
updated_at	TIMESTAMP	Timestamp for the last update.
4. batches
Tracks individual batches of products for traceability.

Column	Type	Description
id	SERIAL	Primary key, unique batch ID.
product_id	INT	Foreign key to products(id).
batch_number	VARCHAR(50)	Unique identifier for the batch.
production_date	DATE	Date the batch was produced.
expiry_date	DATE	Expiration date of the batch, if applicable.
created_at	TIMESTAMP	Timestamp when the batch was added.
updated_at	TIMESTAMP	Timestamp for the last update.
5. stock_movements
Tracks stock movements (e.g., incoming or outgoing stock) to monitor adjustments.

Column	Type	Description
id	SERIAL	Primary key, unique movement ID.
inventory_item_id	INT	Foreign key to inventory_items(id).
movement_type	VARCHAR(20)	Type of movement (IN, OUT, TRANSFER).
quantity	INT	Quantity moved.
date	TIMESTAMP	Date and time of the movement.
source_warehouse_id	INT	Foreign key to warehouses(id), if applicable.
destination_warehouse_id	INT	Foreign key to warehouses(id), if applicable.
created_at	TIMESTAMP	Timestamp when the movement was recorded.
This design enables tracking inventory at the warehouse level, monitoring stock movements, and
managing product batches with expiry dates.-->