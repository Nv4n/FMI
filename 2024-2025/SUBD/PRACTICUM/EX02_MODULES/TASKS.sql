CREATE PROCEDURE GET_DAY_OF_YEAR(IN DATE_PARAM DATE)
BEGIN
    CALL DBMS_OUTPUT.PUT_LINE(JULIAN_DAY(DATE_PARAM) || ' ' || DAYNAME(DATE_PARAM) || ' ' || DAYOFYEAR(DATE_PARAM));
END;

CREATE PROCEDURE P3_FOO(OUT P_DAY INT)
    LANGUAGE SQL
BEGIN
    DECLARE V_DATE DATE;
    SET V_DATE = CURRENT_DATE;
    SET P_DAY = DAYOFYEAR(V_DATE);
END;

CREATE PROCEDURE PRINT_HELLO(IN name VARCHAR(100))
    LANGUAGE SQL
BEGIN

    CALL DBMS_OUTPUT.PUT_LINE('Hello, ' || name || '!');
END;

CREATE PROCEDURE SQRT_OF_SUM(IN lval DECIMAL, IN rval DECIMAL)
    LANGUAGE SQL
BEGIN
    DECLARE RESULT DECIMAL;
    SET RESULT = SQRT(lval + rval);

    CALL DBMS_OUTPUT.PUT_LINE('SQRT: ' || RESULT || ' OF SUM: ' || (lval + rval));
END;

-- auto-generated definition
create module MOD1;

ALTER MODULE MOD1 PUBLISH PROCEDURE
    PITAGOR(IN P_A DECIMAL(9, 2), IN P_B DECIMAL(9, 2), OUT OUTPUT DECIMAL(9, 2))
BEGIN
    SET OUTPUT = SQRT(P_A*P_A+P_B*P_B);
END;

ALTER MODULE MOD1 PUBLISH FUNCTION
    F_PITAGOR(P_A DECIMAL(9,2),P_B DECIMAL(9,2))
RETURNS DEC(9,2)
RETURN SQRT(P_A*P_A+P_B*P_B);

